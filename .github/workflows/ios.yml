name: Build and Upload
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

concurrency:
  group: ${{ github.workflow }}-${{ github.event_name == 'pull_request' && github.head_ref || github.ref }}
  cancel-in-progress: true
  
jobs:
  build:
    name: Build and upload
    strategy:
      fail-fast: false
      matrix:
        target:
          - WebScraper
        include:
          - target: WebScraper
            sdk: iphoneos
            scheme: WebScraper
            APP_NAME: WebScraper
            IPA_NAME: WebScraper

    runs-on: 'macos-15'
    timeout-minutes: 300
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          submodules: recursive
        
      - name: Setup Xcode
        uses: maxim-lobanov/setup-xcode@v1.6.0
        with:
          xcode-version: '16.2'
   
      - uses: actions/cache@v3
        with:
          path: .build
          key: ${{ runner.os }}-spm-${{ hashFiles('**/Package.resolved') }}

      - name: Install dependencies
        run: brew install ldid

      - name: Cache DerivedData
        uses: irgaly/xcode-cache@v1
        with:
          key: xcode-cache-deriveddata-${{ github.workflow }}-${{ github.sha }}
          restore-keys: xcode-cache-deriveddata-${{ github.workflow }}-

      - name: Build WebScraper
        run: |
          xcodebuild -configuration Release \
          -project WebScraper.xcodeproj \
          -scheme "${{ matrix.scheme }}" \
          -sdk ${{ matrix.sdk }} \
          archive \
          -archivePath ./archive \
          CODE_SIGNING_REQUIRED=NO \
          AD_HOC_CODE_SIGNING_ALLOWED=YES \
          CODE_SIGNING_ALLOWED=NO \
          DEVELOPMENT_TEAM=95J8WZ4TN8 \
          ORG_IDENTIFIER=SternXD.WebScraper \
          | xcpretty && exit ${PIPESTATUS[0]}
          
      - name: Fakesign app
        run: |
          #rm -rf archive.xcarchive/Products/Applications/${{ matrix.APP_NAME }}.app/Frameworks/*.framework/Frameworks/
          ldid -S archive.xcarchive/Products/Applications/${{ matrix.APP_NAME }}.app/${{ matrix.APP_NAME }}
      - name: Convert to IPA
        run: |
          mkdir Payload
          cp -pR "archive.xcarchive/Products/Applications/${{ matrix.APP_NAME }}.app" "Payload/${{ matrix.IPA_NAME }}.app"
          zip -r "${{ matrix.IPA_NAME }}.ipa" Payload

      - name: Upload Artifact
        uses: actions/upload-artifact@v4.3.1
        with:
          name: "${{ matrix.IPA_NAME }}.ipa"
          path: "${{ matrix.IPA_NAME }}.ipa"
